% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/translate.R
\docType{data}
\name{translate}
\alias{translate}
\alias{TRANSLATION}
\title{Translate DNA or RNA}
\format{\strong{TRANSLATION} - A named \code{character} vector with length 64. Names
correspond to codons, values correspond to single letter amino acid codes,
and '*' for stop.}
\usage{
translate(x, type = Biostrings::DNAStringSet, translation = TRANSLATION,
  start = "ATG", ambiguities = "solve")

TRANSLATION
}
\arguments{
\item{x}{\code{[character]}

Sequences to translate. Must only contain valid IUPAC DNA or RNA
characters.}

\item{type}{\code{[function]}

Used to coerce x to a class compatible with \link[Biostrings:translate]{Biostrings::translate}.
Typically one of \link[Biostrings:DNAStringSet]{Biostrings::DNAStringSet}, or
\link[Biostrings:RNAStringSet]{Biostrings::RNAStringSet}. Defaults to \link[Biostrings:DNAStringSet]{Biostrings::DNAStringSet}.}

\item{translation}{\code{[named:character(64)]}

Amino acid letters with names corresponding to each of the 64 possible DNA
codons. Defaults to \code{TRANSLATION}.}

\item{start}{\code{[character]}

Start codons. The first occurence of one of these codons will be
translated to \code{'M'}, and further occurences will be translated to that
defined by \code{translation}. Defaults to \code{'ATG'}.}

\item{abiguities}{\code{['solve'|'error'|'error.if.X'|'X']}

How ambiguities be handled. See \link[Biostrings:translate]{Biostrings::translate} for more details.
Defaults to \code{'solve'} which will translate to the appropriate amino acid,
and will translate to \code{'X'} if not possible to unambiguously translate to
a single amino acid.}
}
\value{
Returns a character vector with the same length as \code{x}.
}
\description{
Translate a vector of nucleotide sequences into a vector of protein
sequences.
}
\details{
This function is a simple wrapper around \link[Biostrings:translate]{Biostrings::translate} that
takes a character vector as input and a returns a character vector.
The default behavior is slightly different in that ambiguous bases will
be solved rather than causing an error, and alternative start codons are
not used without being explicitly specified with the \code{start} parameter.
This prevents a common "gotcha" when translating a subsequence with
\link[Biostrings:translate]{Biostrings::translate} using the default \link[Biostrings:GENETIC_CODE]{Biostrings::GENETIC_CODE}
where it would unexpectedly translate \code{"TTG"}, or \code{"CTG"} to \code{"M"} rather
than \code{"L"} without any warning. To reproduce this behavior, simply specify
\code{start = c('ATG', 'TTG', 'CTG')} which is only sensible if you are
translating an entire coding sequence.
}
\examples{
  # Default settings assume DNA input and will attempt to solve ambiguity
  translate(c('ATGAAAGGRTGA', 'ATGGGRRAATAA'))

  # RNA can also be translated
  translate('AUGAAAGGRUGA', type = Biostrings::RNAStringSet)

  # Alternative start codons may be specified
  translate(c('AAAATGAAA', 'ATGAAAAAA'), start = c('ATG', 'AAA'))

  # Alternative translation code can be specified
  codon_code <- TRANSLATION
  codon_code['TGG'] <- 'R'
  translate(c('AAATGGTGG', 'ATGTGGTGG'), translation = codon_code)

  # Other common translation tables
  Biostrings::GENETIC_CODE_TABLE
  Biostrings::getGeneticCode('Yeast Mitochondrial', full.search = TRUE)

}
\keyword{datasets}
